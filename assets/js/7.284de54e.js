(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,n,s){"use strict";s.r(n);var a=s(42),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-c-初识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-c-初识"}},[t._v("#")]),t._v(" 1 C++初识")]),t._v(" "),s("h3",{attrs:{id:"_1-1-第一个c-程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-第一个c-程序"}},[t._v("#")]),t._v(" 1.1  第一个C++程序")]),t._v(" "),s("p",[t._v("编写一个C++程序总共分为4个步骤")]),t._v(" "),s("ul",[s("li",[t._v("创建项目")]),t._v(" "),s("li",[t._v("创建文件")]),t._v(" "),s("li",[t._v("编写代码")]),t._v(" "),s("li",[t._v("运行程序")])]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-创建项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-创建项目"}},[t._v("#")]),t._v(" 1.1.1 创建项目")]),t._v(" "),s("p",[t._v("​\tVisual Studio是我们用来编写C++程序的主要工具，我们先将它打开")]),t._v(" "),s("h4",{attrs:{id:"_1-1-2-创建文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-创建文件"}},[t._v("#")]),t._v(" 1.1.2 创建文件")]),t._v(" "),s("p",[t._v("右键源文件，选择添加->新建项")]),t._v(" "),s("p",[t._v("给C++文件起个名称，然后点击添加即可。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-3-编写代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-编写代码"}},[t._v("#")]),t._v(" 1.1.3 编写代码")]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#include<iostream>\nusing namespace std;\n\nint main() {\n\n\tcout << "Hello world" << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("h4",{attrs:{id:"_1-1-4-运行程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-运行程序"}},[t._v("#")]),t._v(" 1.1.4 运行程序")]),t._v(" "),s("h3",{attrs:{id:"_1-2-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-注释"}},[t._v("#")]),t._v(" 1.2 注释")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码")]),t._v(" "),s("p",[s("strong",[t._v("两种格式")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("单行注释")]),t._v("："),s("code",[t._v("// 描述信息")]),t._v(" "),s("ul",[s("li",[t._v("通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==")])])]),t._v(" "),s("li",[s("strong",[t._v("多行注释")]),t._v("： "),s("code",[t._v("/* 描述信息 */")]),t._v(" "),s("ul",[s("li",[t._v("通常放在一段代码的上方，==对该段代码做整体说明==")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("提示：编译器在编译代码时，会忽略注释的内容")])]),t._v(" "),s("h3",{attrs:{id:"_1-3-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-变量"}},[t._v("#")]),t._v(" 1.3 变量")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：给一段指定的内存空间起名，方便操作这段内存")]),t._v(" "),s("p",[s("strong",[t._v("语法")]),t._v("："),s("code",[t._v("数据类型 变量名 = 初始值;")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#include<iostream>\nusing namespace std;\n\nint main() {\n\n\t//变量的定义\n\t//语法：数据类型  变量名 = 初始值\n\n\tint a = 10;\n\n\tcout << "a = " << a << endl;\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：C++在创建变量时，必须给变量一个初始值，否则会报错")])]),t._v(" "),s("h3",{attrs:{id:"_1-4-常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-常量"}},[t._v("#")]),t._v(" 1.4  常量")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：用于记录程序中不可更改的数据")]),t._v(" "),s("p",[t._v("C++定义常量两种方式")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("#define")]),t._v(" 宏常量： "),s("code",[t._v("#define 常量名 常量值")])]),t._v(" "),s("ul",[s("li",[t._v("==通常在文件上方定义==，表示一个常量")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("const")]),t._v("修饰的变量 "),s("code",[t._v("const 数据类型 常量名 = 常量值")])]),t._v(" "),s("ul",[s("li",[t._v("==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改")])])]),t._v(" "),s("li",[s("p",[t._v("define和const的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、define定义的常量是没有类型的，如#define MAX 255，编译器只是把定义的变量名和变量值对应起来；const定义的常量是有类型的，存放在静态区中，如const float MAX = 255;。也正是因为define无类型，所以没有类型安全的检查就有可能会有意想不到的错误，而const会在编译的时候进行类型检查\n2、define定义的变量是在预编译的时候完成的，只要程序中用到该变量的地方都要进行拷贝替换，内存消耗较大；const定义的变量在编译时确定它的值，只有一次拷贝。所以宏定义在程序中所消耗的内存要比const变量大得多\n3、define定义的常量是不可以用指针变量去指向的；const定义的常量是可以用指针指向该常量的地址\n4、define可以定义一些简单的函数；const不可以定义函数\n5、编译器一般不给const常量分配存储空间，而是把它们保存在符号表中，这使得它成为一个编译期间的常量，没有了存储与读内存的操作，使得它的效率也很高。\n6、宏替换只做替换，不做计算，不做表达式求解\n")])])])])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//1、宏常量\n#define day 7\n\nint main() {\n\n\tcout << "一周里总共有 " << day << " 天" << endl;\n\t//day = 8;  //报错，宏常量不可以修改\n\n\t//2、const修饰变量\n\tconst int month = 12;\n\tcout << "一年里总共有 " << month << " 个月份" << endl;\n\t//month = 24; //报错，常量是不可以修改的\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("练习1")]),t._v(":输入输出")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"厘米数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"对应的英寸为："')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.54")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-5-关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-关键字"}},[t._v("#")]),t._v(" 1.5 关键字")]),t._v(" "),s("p",[t._v("**作用：**关键字是C++中预先保留的单词（标识符）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("在定义变量或者常量时候，不要用关键字")])])]),t._v(" "),s("p",[t._v("C++关键字如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("asm")]),t._v(" "),s("th",[t._v("do")]),t._v(" "),s("th",[t._v("if")]),t._v(" "),s("th",[t._v("return")]),t._v(" "),s("th",[t._v("typedef")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("auto")]),t._v(" "),s("td",[t._v("double")]),t._v(" "),s("td",[t._v("inline")]),t._v(" "),s("td",[t._v("short")]),t._v(" "),s("td",[t._v("typeid")])]),t._v(" "),s("tr",[s("td",[t._v("bool")]),t._v(" "),s("td",[t._v("dynamic_cast")]),t._v(" "),s("td",[t._v("int")]),t._v(" "),s("td",[t._v("signed")]),t._v(" "),s("td",[t._v("typename")])]),t._v(" "),s("tr",[s("td",[t._v("break")]),t._v(" "),s("td",[t._v("else")]),t._v(" "),s("td",[t._v("long")]),t._v(" "),s("td",[t._v("sizeof")]),t._v(" "),s("td",[t._v("union")])]),t._v(" "),s("tr",[s("td",[t._v("case")]),t._v(" "),s("td",[t._v("enum")]),t._v(" "),s("td",[t._v("mutable")]),t._v(" "),s("td",[t._v("static")]),t._v(" "),s("td",[t._v("unsigned")])]),t._v(" "),s("tr",[s("td",[t._v("catch")]),t._v(" "),s("td",[t._v("explicit")]),t._v(" "),s("td",[t._v("namespace")]),t._v(" "),s("td",[t._v("static_cast")]),t._v(" "),s("td",[t._v("using")])]),t._v(" "),s("tr",[s("td",[t._v("char")]),t._v(" "),s("td",[t._v("export")]),t._v(" "),s("td",[t._v("new")]),t._v(" "),s("td",[t._v("struct")]),t._v(" "),s("td",[t._v("virtual")])]),t._v(" "),s("tr",[s("td",[t._v("class")]),t._v(" "),s("td",[t._v("extern")]),t._v(" "),s("td",[t._v("operator")]),t._v(" "),s("td",[t._v("switch")]),t._v(" "),s("td",[t._v("void")])]),t._v(" "),s("tr",[s("td",[t._v("const")]),t._v(" "),s("td",[t._v("false")]),t._v(" "),s("td",[t._v("private")]),t._v(" "),s("td",[t._v("template")]),t._v(" "),s("td",[t._v("volatile")])]),t._v(" "),s("tr",[s("td",[t._v("const_cast")]),t._v(" "),s("td",[t._v("float")]),t._v(" "),s("td",[t._v("protected")]),t._v(" "),s("td",[t._v("this")]),t._v(" "),s("td",[t._v("wchar_t")])]),t._v(" "),s("tr",[s("td",[t._v("continue")]),t._v(" "),s("td",[t._v("for")]),t._v(" "),s("td",[t._v("public")]),t._v(" "),s("td",[t._v("throw")]),t._v(" "),s("td",[t._v("while")])]),t._v(" "),s("tr",[s("td",[t._v("default")]),t._v(" "),s("td",[t._v("friend")]),t._v(" "),s("td",[t._v("register")]),t._v(" "),s("td",[t._v("true")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("delete")]),t._v(" "),s("td",[t._v("goto")]),t._v(" "),s("td",[t._v("reinterpret_cast")]),t._v(" "),s("td",[t._v("try")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("code",[t._v("提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。")])]),t._v(" "),s("h3",{attrs:{id:"_1-6-标识符命名规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-标识符命名规则"}},[t._v("#")]),t._v(" 1.6 标识符命名规则")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：C++规定给标识符（变量、常量）命名时，有一套自己的规则")]),t._v(" "),s("ul",[s("li",[t._v("标识符不能是关键字")]),t._v(" "),s("li",[t._v("标识符只能由字母、数字、下划线组成")]),t._v(" "),s("li",[t._v("第一个字符必须为字母或下划线")]),t._v(" "),s("li",[t._v("标识符中字母区分大小写")])]),t._v(" "),s("blockquote",[s("p",[t._v("建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读")])]),t._v(" "),s("h2",{attrs:{id:"_2-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型"}},[t._v("#")]),t._v(" 2 数据类型")]),t._v(" "),s("p",[t._v("C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存")]),t._v(" "),s("h3",{attrs:{id:"_2-1-整型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-整型"}},[t._v("#")]),t._v(" 2.1 整型")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：整型变量表示的是==整数类型==的数据")]),t._v(" "),s("p",[t._v("C++中能够表示整型的类型有以下几种方式，"),s("strong",[t._v("区别在于所占内存空间不同")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("数据类型")])]),t._v(" "),s("th",[s("strong",[t._v("占用空间")])]),t._v(" "),s("th",[t._v("取值范围")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("short(短整型)")]),t._v(" "),s("td",[t._v("2字节")]),t._v(" "),s("td",[t._v("(-2^15 ~ 2^15-1)")])]),t._v(" "),s("tr",[s("td",[t._v("int(整型)")]),t._v(" "),s("td",[t._v("4字节")]),t._v(" "),s("td",[t._v("(-2^31 ~ 2^31-1)")])]),t._v(" "),s("tr",[s("td",[t._v("long(长整形)")]),t._v(" "),s("td",[t._v("Windows为4字节，Linux为4字节(32位)，8字节(64位)")]),t._v(" "),s("td",[t._v("(-2^31 ~ 2^31-1)")])]),t._v(" "),s("tr",[s("td",[t._v("long long(长长整形)")]),t._v(" "),s("td",[t._v("8字节")]),t._v(" "),s("td",[t._v("(-2^63 ~ 2^63-1)")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-2-sizeof关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-sizeof关键字"}},[t._v("#")]),t._v(" 2.2 sizeof关键字")]),t._v(" "),s("p",[t._v("**作用：**利用sizeof关键字可以==统计数据类型所占内存大小==")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),t._v(" "),s("code",[t._v("sizeof( 数据类型 / 变量)")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tcout << "short 类型所占内存空间为： " << sizeof(short) << endl;\n\n\tcout << "int 类型所占内存空间为： " << sizeof(int) << endl;\n\n\tcout << "long 类型所占内存空间为： " << sizeof(long) << endl;\n\n\tcout << "long long 类型所占内存空间为： " << sizeof(long long) << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[s("strong",[t._v("整型结论")]),t._v("：==short < int <= long <= long long==")])]),t._v(" "),s("h3",{attrs:{id:"_2-3-实型-浮点型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实型-浮点型"}},[t._v("#")]),t._v(" 2.3 实型（浮点型）")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：用于==表示小数==")]),t._v(" "),s("p",[t._v("浮点型变量分为两种：")]),t._v(" "),s("ol",[s("li",[t._v("单精度float")]),t._v(" "),s("li",[t._v("双精度double")])]),t._v(" "),s("p",[t._v("两者的"),s("strong",[t._v("区别")]),t._v("在于表示的有效数字范围不同。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("数据类型")])]),t._v(" "),s("th",[s("strong",[t._v("占用空间")])]),t._v(" "),s("th",[s("strong",[t._v("有效数字范围")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("4字节")]),t._v(" "),s("td",[t._v("7位有效数字")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("8字节")]),t._v(" "),s("td",[t._v("15～16位有效数字")])])])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tfloat f1 = 3.14f;\n\tdouble d1 = 3.14;\n\n\tcout << f1 << endl;\n\tcout << d1<< endl;\n\n\tcout << "float  sizeof = " << sizeof(f1) << endl;  // 4\n\tcout << "double sizeof = " << sizeof(d1) << endl;  // 8\n\n\t//科学计数法\n\tfloat f2 = 3e2; // 3 * 10 ^ 2 \n\tcout << "f2 = " << f2 << endl;\n\n\tfloat f3 = 3e-2;  // 3 * 0.1 ^ 2\n\tcout << "f3 = " << f3 << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_2-4-字符型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-字符型"}},[t._v("#")]),t._v(" 2.4 字符型")]),t._v(" "),s("p",[t._v("**作用：**字符型变量用于显示单个字符")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("char ch = 'a';")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意2：单引号内只能有一个字符，不可以是字符串")])]),t._v(" "),s("ul",[s("li",[t._v("C和C++中字符型变量只占用==1个字节==。")]),t._v(" "),s("li",[t._v("字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int main() {\n\t\n\tchar ch = 'a';\n\tcout << ch << endl;\n\tcout << sizeof(char) << endl; // 1\n\n\t//ch = \"abcde\"; //错误，不可以用双引号\n\t//ch = 'abcde'; //错误，单引号内只能引用一个字符\n\n\tcout << (int)ch << endl;  //查看字符a对应的ASCII码\n\tch = 97; //可以直接用ASCII给字符型变量赋值\n\tcout << ch << endl;\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n")])])]),s("p",[t._v("ASCII码表格：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("ASCII")]),t._v("值")]),t._v(" "),s("th",[s("strong",[t._v("控制字符")])]),t._v(" "),s("th",[s("strong",[t._v("ASCII")]),t._v("值")]),t._v(" "),s("th",[s("strong",[t._v("字符")])]),t._v(" "),s("th",[s("strong",[t._v("ASCII")]),t._v("值")]),t._v(" "),s("th",[s("strong",[t._v("字符")])]),t._v(" "),s("th",[s("strong",[t._v("ASCII")]),t._v("值")]),t._v(" "),s("th",[s("strong",[t._v("字符")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("NUT")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("(space)")]),t._v(" "),s("td",[t._v("64")]),t._v(" "),s("td",[t._v("@")]),t._v(" "),s("td",[t._v("96")]),t._v(" "),s("td",[t._v("、")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SOH")]),t._v(" "),s("td",[t._v("33")]),t._v(" "),s("td",[t._v("!")]),t._v(" "),s("td",[t._v("65")]),t._v(" "),s("td",[t._v("A")]),t._v(" "),s("td",[t._v("97")]),t._v(" "),s("td",[t._v("a")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("STX")]),t._v(" "),s("td",[t._v("34")]),t._v(" "),s("td",[t._v('"')]),t._v(" "),s("td",[t._v("66")]),t._v(" "),s("td",[t._v("B")]),t._v(" "),s("td",[t._v("98")]),t._v(" "),s("td",[t._v("b")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("ETX")]),t._v(" "),s("td",[t._v("35")]),t._v(" "),s("td",[t._v("#")]),t._v(" "),s("td",[t._v("67")]),t._v(" "),s("td",[t._v("C")]),t._v(" "),s("td",[t._v("99")]),t._v(" "),s("td",[t._v("c")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("EOT")]),t._v(" "),s("td",[t._v("36")]),t._v(" "),s("td",[t._v("$")]),t._v(" "),s("td",[t._v("68")]),t._v(" "),s("td",[t._v("D")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("d")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("ENQ")]),t._v(" "),s("td",[t._v("37")]),t._v(" "),s("td",[t._v("%")]),t._v(" "),s("td",[t._v("69")]),t._v(" "),s("td",[t._v("E")]),t._v(" "),s("td",[t._v("101")]),t._v(" "),s("td",[t._v("e")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("ACK")]),t._v(" "),s("td",[t._v("38")]),t._v(" "),s("td",[t._v("&")]),t._v(" "),s("td",[t._v("70")]),t._v(" "),s("td",[t._v("F")]),t._v(" "),s("td",[t._v("102")]),t._v(" "),s("td",[t._v("f")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("BEL")]),t._v(" "),s("td",[t._v("39")]),t._v(" "),s("td",[t._v(",")]),t._v(" "),s("td",[t._v("71")]),t._v(" "),s("td",[t._v("G")]),t._v(" "),s("td",[t._v("103")]),t._v(" "),s("td",[t._v("g")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("BS")]),t._v(" "),s("td",[t._v("40")]),t._v(" "),s("td",[t._v("(")]),t._v(" "),s("td",[t._v("72")]),t._v(" "),s("td",[t._v("H")]),t._v(" "),s("td",[t._v("104")]),t._v(" "),s("td",[t._v("h")])]),t._v(" "),s("tr",[s("td",[t._v("9")]),t._v(" "),s("td",[t._v("HT")]),t._v(" "),s("td",[t._v("41")]),t._v(" "),s("td",[t._v(")")]),t._v(" "),s("td",[t._v("73")]),t._v(" "),s("td",[t._v("I")]),t._v(" "),s("td",[t._v("105")]),t._v(" "),s("td",[t._v("i")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("LF")]),t._v(" "),s("td",[t._v("42")]),t._v(" "),s("td",[t._v("*")]),t._v(" "),s("td",[t._v("74")]),t._v(" "),s("td",[t._v("J")]),t._v(" "),s("td",[t._v("106")]),t._v(" "),s("td",[t._v("j")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("VT")]),t._v(" "),s("td",[t._v("43")]),t._v(" "),s("td",[t._v("+")]),t._v(" "),s("td",[t._v("75")]),t._v(" "),s("td",[t._v("K")]),t._v(" "),s("td",[t._v("107")]),t._v(" "),s("td",[t._v("k")])]),t._v(" "),s("tr",[s("td",[t._v("12")]),t._v(" "),s("td",[t._v("FF")]),t._v(" "),s("td",[t._v("44")]),t._v(" "),s("td",[t._v(",")]),t._v(" "),s("td",[t._v("76")]),t._v(" "),s("td",[t._v("L")]),t._v(" "),s("td",[t._v("108")]),t._v(" "),s("td",[t._v("l")])]),t._v(" "),s("tr",[s("td",[t._v("13")]),t._v(" "),s("td",[t._v("CR")]),t._v(" "),s("td",[t._v("45")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("77")]),t._v(" "),s("td",[t._v("M")]),t._v(" "),s("td",[t._v("109")]),t._v(" "),s("td",[t._v("m")])]),t._v(" "),s("tr",[s("td",[t._v("14")]),t._v(" "),s("td",[t._v("SO")]),t._v(" "),s("td",[t._v("46")]),t._v(" "),s("td",[t._v(".")]),t._v(" "),s("td",[t._v("78")]),t._v(" "),s("td",[t._v("N")]),t._v(" "),s("td",[t._v("110")]),t._v(" "),s("td",[t._v("n")])]),t._v(" "),s("tr",[s("td",[t._v("15")]),t._v(" "),s("td",[t._v("SI")]),t._v(" "),s("td",[t._v("47")]),t._v(" "),s("td",[t._v("/")]),t._v(" "),s("td",[t._v("79")]),t._v(" "),s("td",[t._v("O")]),t._v(" "),s("td",[t._v("111")]),t._v(" "),s("td",[t._v("o")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("DLE")]),t._v(" "),s("td",[t._v("48")]),t._v(" "),s("td",[t._v("0")]),t._v(" "),s("td",[t._v("80")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("112")]),t._v(" "),s("td",[t._v("p")])]),t._v(" "),s("tr",[s("td",[t._v("17")]),t._v(" "),s("td",[t._v("DCI")]),t._v(" "),s("td",[t._v("49")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("81")]),t._v(" "),s("td",[t._v("Q")]),t._v(" "),s("td",[t._v("113")]),t._v(" "),s("td",[t._v("q")])]),t._v(" "),s("tr",[s("td",[t._v("18")]),t._v(" "),s("td",[t._v("DC2")]),t._v(" "),s("td",[t._v("50")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("82")]),t._v(" "),s("td",[t._v("R")]),t._v(" "),s("td",[t._v("114")]),t._v(" "),s("td",[t._v("r")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("DC3")]),t._v(" "),s("td",[t._v("51")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("83")]),t._v(" "),s("td",[t._v("S")]),t._v(" "),s("td",[t._v("115")]),t._v(" "),s("td",[t._v("s")])]),t._v(" "),s("tr",[s("td",[t._v("20")]),t._v(" "),s("td",[t._v("DC4")]),t._v(" "),s("td",[t._v("52")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("84")]),t._v(" "),s("td",[t._v("T")]),t._v(" "),s("td",[t._v("116")]),t._v(" "),s("td",[t._v("t")])]),t._v(" "),s("tr",[s("td",[t._v("21")]),t._v(" "),s("td",[t._v("NAK")]),t._v(" "),s("td",[t._v("53")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("85")]),t._v(" "),s("td",[t._v("U")]),t._v(" "),s("td",[t._v("117")]),t._v(" "),s("td",[t._v("u")])]),t._v(" "),s("tr",[s("td",[t._v("22")]),t._v(" "),s("td",[t._v("SYN")]),t._v(" "),s("td",[t._v("54")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("86")]),t._v(" "),s("td",[t._v("V")]),t._v(" "),s("td",[t._v("118")]),t._v(" "),s("td",[t._v("v")])]),t._v(" "),s("tr",[s("td",[t._v("23")]),t._v(" "),s("td",[t._v("TB")]),t._v(" "),s("td",[t._v("55")]),t._v(" "),s("td",[t._v("7")]),t._v(" "),s("td",[t._v("87")]),t._v(" "),s("td",[t._v("W")]),t._v(" "),s("td",[t._v("119")]),t._v(" "),s("td",[t._v("w")])]),t._v(" "),s("tr",[s("td",[t._v("24")]),t._v(" "),s("td",[t._v("CAN")]),t._v(" "),s("td",[t._v("56")]),t._v(" "),s("td",[t._v("8")]),t._v(" "),s("td",[t._v("88")]),t._v(" "),s("td",[t._v("X")]),t._v(" "),s("td",[t._v("120")]),t._v(" "),s("td",[t._v("x")])]),t._v(" "),s("tr",[s("td",[t._v("25")]),t._v(" "),s("td",[t._v("EM")]),t._v(" "),s("td",[t._v("57")]),t._v(" "),s("td",[t._v("9")]),t._v(" "),s("td",[t._v("89")]),t._v(" "),s("td",[t._v("Y")]),t._v(" "),s("td",[t._v("121")]),t._v(" "),s("td",[t._v("y")])]),t._v(" "),s("tr",[s("td",[t._v("26")]),t._v(" "),s("td",[t._v("SUB")]),t._v(" "),s("td",[t._v("58")]),t._v(" "),s("td",[t._v(":")]),t._v(" "),s("td",[t._v("90")]),t._v(" "),s("td",[t._v("Z")]),t._v(" "),s("td",[t._v("122")]),t._v(" "),s("td",[t._v("z")])]),t._v(" "),s("tr",[s("td",[t._v("27")]),t._v(" "),s("td",[t._v("ESC")]),t._v(" "),s("td",[t._v("59")]),t._v(" "),s("td",[t._v(";")]),t._v(" "),s("td",[t._v("91")]),t._v(" "),s("td",[t._v("[")]),t._v(" "),s("td",[t._v("123")]),t._v(" "),s("td",[t._v("{")])]),t._v(" "),s("tr",[s("td",[t._v("28")]),t._v(" "),s("td",[t._v("FS")]),t._v(" "),s("td",[t._v("60")]),t._v(" "),s("td",[t._v("<")]),t._v(" "),s("td",[t._v("92")]),t._v(" "),s("td",[t._v("/")]),t._v(" "),s("td",[t._v("124")]),t._v(" "),s("td",[t._v("|")])]),t._v(" "),s("tr",[s("td",[t._v("29")]),t._v(" "),s("td",[t._v("GS")]),t._v(" "),s("td",[t._v("61")]),t._v(" "),s("td",[t._v("=")]),t._v(" "),s("td",[t._v("93")]),t._v(" "),s("td",[t._v("]")]),t._v(" "),s("td",[t._v("125")]),t._v(" "),s("td",[t._v("}")])]),t._v(" "),s("tr",[s("td",[t._v("30")]),t._v(" "),s("td",[t._v("RS")]),t._v(" "),s("td",[t._v("62")]),t._v(" "),s("td",[t._v(">")]),t._v(" "),s("td",[t._v("94")]),t._v(" "),s("td",[t._v("^")]),t._v(" "),s("td",[t._v("126")]),t._v(" "),s("td",[t._v("`")])]),t._v(" "),s("tr",[s("td",[t._v("31")]),t._v(" "),s("td",[t._v("US")]),t._v(" "),s("td",[t._v("63")]),t._v(" "),s("td",[t._v("?")]),t._v(" "),s("td",[t._v("95")]),t._v(" "),s("td",[t._v("_")]),t._v(" "),s("td",[t._v("127")]),t._v(" "),s("td",[t._v("DEL")])])])]),t._v(" "),s("p",[t._v("ASCII 码大致由以下"),s("strong",[t._v("两部分组")]),t._v("成：")]),t._v(" "),s("ul",[s("li",[t._v("ASCII 非打印控制字符： ASCII 表上的数字 "),s("strong",[t._v("0-31")]),t._v(" 分配给了控制字符，用于控制像打印机等一些外围设备。")]),t._v(" "),s("li",[t._v("ASCII 打印字符：数字 "),s("strong",[t._v("32-126")]),t._v(" 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。")])]),t._v(" "),s("h3",{attrs:{id:"_2-5-转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-转义字符"}},[t._v("#")]),t._v(" 2.5 转义字符")]),t._v(" "),s("p",[t._v("**作用：**用于表示一些==不能显示出来的ASCII字符==")]),t._v(" "),s("p",[t._v("现阶段我们常用的转义字符有："),s("code",[t._v("\\n \\\\ \\t")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("转义字符")])]),t._v(" "),s("th",[s("strong",[t._v("含义")])]),t._v(" "),s("th",[s("strong",[t._v("ASCII")]),t._v("码值（十进制）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\a")]),t._v(" "),s("td",[t._v("警报")]),t._v(" "),s("td",[t._v("007")])]),t._v(" "),s("tr",[s("td",[t._v("\\b")]),t._v(" "),s("td",[t._v("退格(BS) ，将当前位置移到前一列")]),t._v(" "),s("td",[t._v("008")])]),t._v(" "),s("tr",[s("td",[t._v("\\f")]),t._v(" "),s("td",[t._v("换页(FF)，将当前位置移到下页开头")]),t._v(" "),s("td",[t._v("012")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("\\n")])]),t._v(" "),s("td",[s("strong",[t._v("换行(LF) ，将当前位置移到下一行开头")])]),t._v(" "),s("td",[s("strong",[t._v("010")])])]),t._v(" "),s("tr",[s("td",[t._v("\\r")]),t._v(" "),s("td",[t._v("回车(CR) ，将当前位置移到本行开头")]),t._v(" "),s("td",[t._v("013")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("\\t")])]),t._v(" "),s("td",[s("strong",[t._v("水平制表(HT)  （跳到下一个TAB位置）")])]),t._v(" "),s("td",[s("strong",[t._v("009")])])]),t._v(" "),s("tr",[s("td",[t._v("\\v")]),t._v(" "),s("td",[t._v("垂直制表(VT)")]),t._v(" "),s("td",[t._v("011")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("\\\\")])]),t._v(" "),s("td",[s("strong",[t._v('代表一个反斜线字符""')])]),t._v(" "),s("td",[s("strong",[t._v("092")])])]),t._v(" "),s("tr",[s("td",[t._v("'")]),t._v(" "),s("td",[t._v("代表一个单引号（撇号）字符")]),t._v(" "),s("td",[t._v("039")])]),t._v(" "),s("tr",[s("td",[t._v('"')]),t._v(" "),s("td",[t._v("代表一个双引号字符")]),t._v(" "),s("td",[t._v("034")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("代表一个问号")]),t._v(" "),s("td",[t._v("063")])]),t._v(" "),s("tr",[s("td",[t._v("\\0")]),t._v(" "),s("td",[t._v("数字0")]),t._v(" "),s("td",[t._v("000")])]),t._v(" "),s("tr",[s("td",[t._v("\\ddd")]),t._v(" "),s("td",[t._v("8进制转义字符，d范围0~7")]),t._v(" "),s("td",[t._v("3位8进制")])]),t._v(" "),s("tr",[s("td",[t._v("\\xhh")]),t._v(" "),s("td",[t._v("16进制转义字符，h范围0~9，a~f，A~F")]),t._v(" "),s("td",[t._v("3位16进制")])])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\tcout << "\\\\" << endl;\n\tcout << "\\tHello" << endl;\n\tcout << "\\n" << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_2-6-字符串型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-字符串型"}},[t._v("#")]),t._v(" 2.6 字符串型")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：用于表示一串字符")]),t._v(" "),s("p",[s("strong",[t._v("两种风格")])]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("C风格字符串")]),t._v("： "),s("code",[t._v('char 变量名[] = "字符串值"')])]),t._v(" "),s("p",[t._v("示例：")])])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(' int main() {\n\n \tchar str1[] = "hello world";\n \tcout << str1 << endl;\n     \n \tsystem("pause");\n\n \treturn 0;\n }\n')])])]),s("blockquote",[s("p",[t._v("注意：C风格的字符串要用双引号括起来")])]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("C++风格字符串")]),t._v("：  "),s("code",[t._v('string 变量名 = "字符串值"')])]),t._v(" "),s("p",[t._v("示例：")])])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(' #include <iostream>\nusing namespace std;\n #include <string>  // 使用string时要使用此包\n \n int main() {\n     string s = "sss";\n  cout << "s长度：" << s << endl;\n     return 0;\n }\n \n')])])]),s("blockquote",[s("p",[t._v("注意：C++风格字符串，需要加入头文件==#include<string>==")])]),t._v(" "),s("h3",{attrs:{id:"_2-7-布尔类型-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-布尔类型-bool"}},[t._v("#")]),t._v(" 2.7 布尔类型 bool")]),t._v(" "),s("p",[t._v("**作用：**布尔数据类型代表真或假的值")]),t._v(" "),s("p",[t._v("bool类型只有两个值：")]),t._v(" "),s("ul",[s("li",[t._v("true  --- 真（本质是1）")]),t._v(" "),s("li",[t._v("false --- 假（本质是0）")])]),t._v(" "),s("p",[s("strong",[t._v("bool类型占==1个字节==大小")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tbool flag = true;\n\tcout << flag << endl; // 1\n\n\tflag = false;\n\tcout << flag << endl; // 0\n\n\tcout << "size of bool = " << sizeof(bool) << endl; //1\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_2-8-数据的输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-数据的输入"}},[t._v("#")]),t._v(" 2.8 数据的输入")]),t._v(" "),s("p",[s("strong",[t._v("作用：用于从键盘获取数据")])]),t._v(" "),s("p",[t._v("**关键字：**cin")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),t._v(" "),s("code",[t._v("cin >> 变量")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#include <iostream>\nusing namespace std;\n\nint main(){\n\t//整型输入\n\tint a = 0;\n\tcout << "请输入整型变量：" << endl;\n\tcin >> a;\n\tcout << a << endl;\n\n\t//浮点型输入\n\tdouble d = 0;\n\tcout << "请输入浮点型变量：" << endl;\n\tcin >> d;\n\tcout << d << endl;\n\n\t//字符型输入\n\tchar ch = 0;\n\tcout << "请输入字符型变量：" << endl;\n\tcin >> ch;\n\tcout << ch << endl;\n\n\t//字符串型输入\n\tstring str;\n\tcout << "请输入字符串型变量：" << endl;\n\tcin >> str;\n\tcout << str << endl;\n\n\t//布尔类型输入\n\tbool flag = true;\n\tcout << "请输入布尔型变量：" << endl;\n\tcin >> flag;\n\tcout << flag << endl;\n\tsystem("pause");\n\treturn EXIT_SUCCESS;\n}\n')])])]),s("h2",{attrs:{id:"_3-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-运算符"}},[t._v("#")]),t._v(" 3 运算符")]),t._v(" "),s("p",[t._v("**作用：**用于执行代码的运算")]),t._v(" "),s("p",[t._v("本章我们主要讲解以下几类运算符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("运算符类型")])]),t._v(" "),s("th",[s("strong",[t._v("作用")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("算术运算符")]),t._v(" "),s("td",[t._v("用于处理四则运算")])]),t._v(" "),s("tr",[s("td",[t._v("赋值运算符")]),t._v(" "),s("td",[t._v("用于将表达式的值赋给变量")])]),t._v(" "),s("tr",[s("td",[t._v("比较运算符")]),t._v(" "),s("td",[t._v("用于表达式的比较，并返回一个真值或假值")])]),t._v(" "),s("tr",[s("td",[t._v("逻辑运算符")]),t._v(" "),s("td",[t._v("用于根据表达式的值返回真值或假值")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-1-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-算术运算符"}},[t._v("#")]),t._v(" 3.1 算术运算符")]),t._v(" "),s("p",[s("strong",[t._v("作用")]),t._v("：用于处理四则运算")]),t._v(" "),s("p",[t._v("算术运算符包括以下符号：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("运算符")])]),t._v(" "),s("th",[s("strong",[t._v("术语")])]),t._v(" "),s("th",[s("strong",[t._v("示例")])]),t._v(" "),s("th",[s("strong",[t._v("结果")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("正号")]),t._v(" "),s("td",[t._v("+3")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("负号")]),t._v(" "),s("td",[t._v("-3")]),t._v(" "),s("td",[t._v("-3")])]),t._v(" "),s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("加")]),t._v(" "),s("td",[t._v("10 + 5")]),t._v(" "),s("td",[t._v("15")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("减")]),t._v(" "),s("td",[t._v("10 - 5")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("乘")]),t._v(" "),s("td",[t._v("10 * 5")]),t._v(" "),s("td",[t._v("50")])]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("除")]),t._v(" "),s("td",[t._v("10 / 5")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("%")]),t._v(" "),s("td",[t._v("取模(取余)")]),t._v(" "),s("td",[t._v("10 % 3")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("++")]),t._v(" "),s("td",[t._v("前置递增")]),t._v(" "),s("td",[t._v("a=2; b=++a;")]),t._v(" "),s("td",[t._v("a=3; b=3;")])]),t._v(" "),s("tr",[s("td",[t._v("++")]),t._v(" "),s("td",[t._v("后置递增")]),t._v(" "),s("td",[t._v("a=2; b=a++;")]),t._v(" "),s("td",[t._v("a=3; b=2;")])]),t._v(" "),s("tr",[s("td",[t._v("--")]),t._v(" "),s("td",[t._v("前置递减")]),t._v(" "),s("td",[t._v("a=2; b=--a;")]),t._v(" "),s("td",[t._v("a=1; b=1;")])]),t._v(" "),s("tr",[s("td",[t._v("--")]),t._v(" "),s("td",[t._v("后置递减")]),t._v(" "),s("td",[t._v("a=2; b=a--;")]),t._v(" "),s("td",[t._v("a=1; b=2;")])])])]),t._v(" "),s("p",[s("strong",[t._v("示例1：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//加减乘除\nint main() {\n\n\tint a1 = 10;\n\tint b1 = 3;\n\n\tcout << a1 + b1 << endl;\n\tcout << a1 - b1 << endl;\n\tcout << a1 * b1 << endl;\n\tcout << a1 / b1 << endl;  //两个整数相除结果依然是整数\n\n\tint a2 = 10;\n\tint b2 = 20;\n\tcout << a2 / b2 << endl; \n\n\tint a3 = 10;\n\tint b3 = 0;\n\t//cout << a3 / b3 << endl; //报错，除数不可以为0\n\n\n\t//两个小数可以相除\n\tdouble d1 = 0.5;\n\tdouble d2 = 0.25;\n\tcout << d1 / d2 << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：在除法运算中，除数不能为0")])]),t._v(" "),s("p",[s("strong",[t._v("示例2：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//取模\nint main() {\n\n\tint a1 = 10;\n\tint b1 = 3;\n\n\tcout << 10 % 3 << endl;\n\n\tint a2 = 10;\n\tint b2 = 20;\n\n\tcout << a2 % b2 << endl;\n\n\tint a3 = 10;\n\tint b3 = 0;\n\n\t//cout << a3 % b3 << endl; //取模运算时，除数也不能为0\n\n\t//两个小数不可以取模\n\tdouble d1 = 3.14;\n\tdouble d2 = 1.1;\n\n\t//cout << d1 % d2 << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])])]),s("blockquote",[s("p",[t._v("总结：只有整型变量可以进行取模运算")])]),t._v(" "),s("p",[s("strong",[t._v("示例3：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//递增\nint main() {\n\n\t//后置递增\n\tint a = 10;\n\ta++; //等价于a = a + 1\n\tcout << a << endl; // 11\n\n\t//前置递增\n\tint b = 10;\n\t++b;\n\tcout << b << endl; // 11\n\n\t//区别\n\t//前置递增先对变量进行++，再计算表达式\n\tint a2 = 10;\n  cout << b2 << endl; // 110\n  cout << a2 << endl; // 11\n\n\n\t//后置递增先计算表达式，后对变量进行++\n\tint a3 = 10;\n  cout << b3 << endl; // 100\n  cout << a3 << endl; // 11\n\n\tsystem("pause");\n\treturn 0;\n}\n\n')])])]),s("blockquote",[s("p",[t._v("总结：前置递增先对变量进行++，再计算表达式，后置递增相反")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-赋值运算符"}},[t._v("#")]),t._v(" 3.2 赋值运算符")]),t._v(" "),s("p",[t._v("**作用：**用于将表达式的值赋给变量")]),t._v(" "),s("p",[t._v("赋值运算符包括以下几个符号：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("运算符")])]),t._v(" "),s("th",[s("strong",[t._v("术语")])]),t._v(" "),s("th",[s("strong",[t._v("示例")])]),t._v(" "),s("th",[s("strong",[t._v("结果")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("赋值")]),t._v(" "),s("td",[t._v("a=2; b=3;")]),t._v(" "),s("td",[t._v("a=2; b=3;")])]),t._v(" "),s("tr",[s("td",[t._v("+=")]),t._v(" "),s("td",[t._v("加等于")]),t._v(" "),s("td",[t._v("a=0; a+=2;")]),t._v(" "),s("td",[t._v("a=2;")])]),t._v(" "),s("tr",[s("td",[t._v("-=")]),t._v(" "),s("td",[t._v("减等于")]),t._v(" "),s("td",[t._v("a=5; a-=3;")]),t._v(" "),s("td",[t._v("a=2;")])]),t._v(" "),s("tr",[s("td",[t._v("*=")]),t._v(" "),s("td",[t._v("乘等于")]),t._v(" "),s("td",[t._v("a=2; a*=2;")]),t._v(" "),s("td",[t._v("a=4;")])]),t._v(" "),s("tr",[s("td",[t._v("/=")]),t._v(" "),s("td",[t._v("除等于")]),t._v(" "),s("td",[t._v("a=4; a/=2;")]),t._v(" "),s("td",[t._v("a=2;")])]),t._v(" "),s("tr",[s("td",[t._v("%=")]),t._v(" "),s("td",[t._v("模等于")]),t._v(" "),s("td",[t._v("a=3; a%2;")]),t._v(" "),s("td",[t._v("a=1;")])])])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//赋值运算符\n\t// =\n\tint a = 10;\n\ta = 100;\n\tcout << "a = " << a << endl;\n\n\t// +=\n\ta = 10;\n\ta += 2; // a = a + 2;\n\tcout << "a = " << a << endl;\n\n\t// -=\n\ta = 10;\n\ta -= 2; // a = a - 2\n\tcout << "a = " << a << endl;\n\n\t// *=\n\ta = 10;\n\ta *= 2; // a = a * 2\n\tcout << "a = " << a << endl;\n\n\t// /=\n\ta = 10;\n\ta /= 2;  // a = a / 2;\n\tcout << "a = " << a << endl;\n\n\t// %=\n\ta = 10;\n\ta %= 2;  // a = a % 2;\n\tcout << "a = " << a << endl;\n\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_3-3-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-比较运算符"}},[t._v("#")]),t._v(" 3.3 比较运算符")]),t._v(" "),s("p",[t._v("**作用：**用于表达式的比较，并返回一个真值或假值")]),t._v(" "),s("p",[t._v("比较运算符有以下符号：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("运算符")])]),t._v(" "),s("th",[s("strong",[t._v("术语")])]),t._v(" "),s("th",[s("strong",[t._v("示例")])]),t._v(" "),s("th",[s("strong",[t._v("结果")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("相等于")]),t._v(" "),s("td",[t._v("4 == 3")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("不等于")]),t._v(" "),s("td",[t._v("4 != 3")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("小于")]),t._v(" "),s("td",[t._v("4 < 3")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("大于")]),t._v(" "),s("td",[t._v("4 > 3")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("小于等于")]),t._v(" "),s("td",[t._v("4 <= 3")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("大于等于")]),t._v(" "),s("td",[t._v("4 >= 1")]),t._v(" "),s("td",[t._v("1")])])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint a = 10;\n\tint b = 20;\n\n\tcout << (a == b) << endl; // 0 \n\n\tcout << (a != b) << endl; // 1\n\n\tcout << (a > b) << endl; // 0\n\n\tcout << (a < b) << endl; // 1\n\n\tcout << (a >= b) << endl; // 0\n\n\tcout << (a <= b) << endl; // 1\n\t\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。==")])]),t._v(" "),s("h3",{attrs:{id:"_3-4-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-逻辑运算符"}},[t._v("#")]),t._v(" 3.4 逻辑运算符")]),t._v(" "),s("p",[t._v("**作用：**用于根据表达式的值返回真值或假值")]),t._v(" "),s("p",[t._v("逻辑运算符有以下符号：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("运算符")])]),t._v(" "),s("th",[s("strong",[t._v("术语")])]),t._v(" "),s("th",[s("strong",[t._v("示例")])]),t._v(" "),s("th",[s("strong",[t._v("结果")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",[t._v("非")]),t._v(" "),s("td",[t._v("!a")]),t._v(" "),s("td",[t._v("如果a为假，则!a为真；  如果a为真，则!a为假。")])]),t._v(" "),s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("与")]),t._v(" "),s("td",[t._v("a && b")]),t._v(" "),s("td",[t._v("如果a和b都为真，则结果为真，否则为假。")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",[t._v("或")]),t._v(" "),s("td",[t._v("a || b")]),t._v(" "),s("td",[t._v("如果a和b有一个为真，则结果为真，二者都为假时，结果为假。")])])])]),t._v(" "),s("p",[t._v("**示例1：**逻辑非")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//逻辑运算符  --- 非\nint main() {\n\n\tint a = 10;\n\n\tcout << !a << endl; // 0\n\n\tcout << !!a << endl; // 1\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结： 真变假，假变真")])]),t._v(" "),s("p",[t._v("**示例2：**逻辑与")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//逻辑运算符  --- 与\nint main() {\n\n\tint a = 10;\n\tint b = 10;\n\n\tcout << (a && b) << endl;// 1\n\n\ta = 10;\n\tb = 0;\n\n\tcout << (a && b) << endl;// 0 \n\n\ta = 0;\n\tb = 0;\n\n\tcout << (a && b) << endl;// 0\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])])]),s("blockquote",[s("p",[t._v("总结：逻辑==与==运算符总结： ==同真为真，其余为假==")])]),t._v(" "),s("p",[t._v("**示例3：**逻辑或")]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//逻辑运算符  --- 或\nint main() {\n\n\tint a = 10;\n\tint b = 10;\n\n\tcout << (a || b) << endl;// 1\n\n\ta = 10;\n\tb = 0;\n\n\tcout << (a || b) << endl;// 1 \n\n\ta = 0;\n\tb = 0;\n\n\tcout << (a || b) << endl;// 0\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("逻辑==或==运算符总结： ==同假为假，其余为真==")])]),t._v(" "),s("h2",{attrs:{id:"_4-程序流程结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-程序流程结构"}},[t._v("#")]),t._v(" 4 程序流程结构")]),t._v(" "),s("p",[t._v("C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==")]),t._v(" "),s("ul",[s("li",[t._v("顺序结构：程序按顺序执行，不发生跳转")]),t._v(" "),s("li",[t._v("选择结构：依据条件是否满足，有选择的执行相应功能")]),t._v(" "),s("li",[t._v("循环结构：依据条件是否满足，循环多次执行某段代码")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-选择结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-选择结构"}},[t._v("#")]),t._v(" 4.1 选择结构")]),t._v(" "),s("h4",{attrs:{id:"_4-1-1-if语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-if语句"}},[t._v("#")]),t._v(" 4.1.1 if语句")]),t._v(" "),s("p",[t._v("**作用：**执行满足条件的语句")]),t._v(" "),s("p",[t._v("if语句的三种形式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单行格式if语句")])]),t._v(" "),s("li",[s("p",[t._v("多行格式if语句")])]),t._v(" "),s("li",[s("p",[t._v("多条件的if语句")])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("单行格式if语句："),s("code",[t._v("if(条件){ 条件满足执行的语句 }")])]),t._v(" "),s("p",[t._v("示例：")])])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  int main() {\n\n  \t//选择结构-单行if语句\n  \t//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印\n\n  \tint score = 0;\n  \tcout << "请输入一个分数：" << endl;\n  \tcin >> score;\n\n  \tcout << "您输入的分数为： " << score << endl;\n\n  \t//if语句\n  \t//注意事项，在if判断语句后面，不要加分号\n  \tif (score > 600)\n  \t{\n  \t\tcout << "我考上了一本大学！！！" << endl;\n  \t}\n\n  \tsystem("pause");\n   return 0;\n  }\n')])])]),s("blockquote",[s("p",[t._v("注意：if条件表达式后不要加分号")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("多行格式if语句："),s("code",[t._v("if(条件){ 条件满足执行的语句 }else{ 条件不满足执行的语句 };")])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint score = 0;\n\n\tcout << "请输入考试分数：" << endl;\n\n\tcin >> score;\n\n\tif (score > 600)\n\t{\n\t\tcout << "我考上了一本大学" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "我未考上一本大学" << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("多条件的if语句："),s("code",[t._v("if(条件1){ 条件1满足执行的语句 }else if(条件2){条件2满足执行的语句}... else{ 都不满足执行的语句}")])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\tint main() {\n\n\tint score = 0;\n\n\tcout << "请输入考试分数：" << endl;\n\n\tcin >> score;\n\n\tif (score > 600)\n\t{\n\t\tcout << "我考上了一本大学" << endl;\n\t}\n\telse if (score > 500)\n\t{\n\t\tcout << "我考上了二本大学" << endl;\n\t}\n\telse if (score > 400)\n\t{\n\t\tcout << "我考上了三本大学" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "我未考上本科" << endl;\n\t}\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("嵌套if语句")]),t._v("：在if语句中，可以嵌套使用if语句，达到更精确的条件判断")]),t._v(" "),s("p",[t._v("案例需求：")]),t._v(" "),s("ul",[s("li",[t._v("提示用户输入一个高考考试分数，根据分数做如下判断")]),t._v(" "),s("li",[t._v("分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；")]),t._v(" "),s("li",[t._v("在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint score = 0;\n\n\tcout << "请输入考试分数：" << endl;\n\n\tcin >> score;\n\n\tif (score > 600)\n\t{\n\t\tcout << "我考上了一本大学" << endl;\n\t\tif (score > 700)\n\t\t{\n\t\t\tcout << "我考上了北大" << endl;\n\t\t}\n\t\telse if (score > 650)\n\t\t{\n\t\t\tcout << "我考上了清华" << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << "我考上了人大" << endl;\n\t\t}\n\t\t\n\t}\n\telse if (score > 500)\n\t{\n\t\tcout << "我考上了二本大学" << endl;\n\t}\n\telse if (score > 400)\n\t{\n\t\tcout << "我考上了三本大学" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "我未考上本科" << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h4",{attrs:{id:"_4-1-2-三目运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-三目运算符"}},[t._v("#")]),t._v(" 4.1.2 三目运算符")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 通过三目运算符实现简单的判断")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("表达式1 ? 表达式2 ：表达式3")])]),t._v(" "),s("p",[s("strong",[t._v("解释：")])]),t._v(" "),s("p",[t._v("如果表达式1的值为真，执行表达式2，并返回表达式2的结果；")]),t._v(" "),s("p",[t._v("如果表达式1的值为假，执行表达式3，并返回表达式3的结果。")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint a = 10;\n\tint b = 20;\n\tint c = 0;\n\n\tc = a > b ? a : b;\n\tcout << "c = " << c << endl;\n\n\t//C++中三目运算符返回的是变量,可以继续赋值\n\n\t(a > b ? a : b) = 100;\n\n\tcout << "a = " << a << endl;\n\tcout << "b = " << b << endl;\n\tcout << "c = " << c << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰")])]),t._v(" "),s("h4",{attrs:{id:"_4-1-3-switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-switch语句"}},[t._v("#")]),t._v(" 4.1.3 switch语句")]),t._v(" "),s("p",[t._v("**作用：**执行多条件分支语句")]),t._v(" "),s("p",[s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("switch(表达式)\n\n{\n\n\tcase 结果1：执行语句;break;\n\n\tcase 结果2：执行语句;break;\n\n\t...\n\n\tdefault:执行语句;break;\n\n}\n\n")])])]),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//请给电影评分 \n\t//10 ~ 9   经典   \n\t// 8 ~ 7   非常好\n\t// 6 ~ 5   一般\n\t// 5分以下 烂片\n\n\tint score = 0;\n\tcout << "请给电影打分" << endl;\n\tcin >> score;\n\n\tswitch (score)\n\t{\n\tcase 10:\n\tcase 9:\n\t\tcout << "经典" << endl;\n\t\tbreak;\n\tcase 8:\n\t\tcout << "非常好" << endl;\n\t\tbreak;\n\tcase 7:\n\tcase 6:\n\t\tcout << "一般" << endl;\n\t\tbreak;\n\tdefault:\n\t\tcout << "烂片" << endl;\n\t\tbreak;\n\t}\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意1：switch语句中表达式类型只能是整型或者字符型")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意2：case里如果没有break，那么程序会一直向下执行")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间")])]),t._v(" "),s("h3",{attrs:{id:"_4-2-循环结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-循环结构"}},[t._v("#")]),t._v(" 4.2 循环结构")]),t._v(" "),s("h4",{attrs:{id:"_4-2-1-while循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-while循环语句"}},[t._v("#")]),t._v(" 4.2.1 while循环语句")]),t._v(" "),s("p",[t._v("**作用：**满足循环条件，执行循环语句")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("while(循环条件){ 循环语句 }")])]),t._v(" "),s("p",[s("strong",[t._v("解释：")]),t._v("==只要循环条件的结果为真，就执行循环语句==")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint num = 0;\n\twhile (num < 10)\n\t{\n\t\tcout << "num = " << num << endl;\n\t\tnum++;\n\t}\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环")])]),t._v(" "),s("p",[s("strong",[t._v("while循环练习案例：")]),t._v("==猜数字==")]),t._v(" "),s("p",[t._v("**案例描述：**系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。")]),t._v(" "),s("p",[t._v("代码")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<ctime>")])]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加随机种子，否则每次都一样")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("srand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、 系统生产随机数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"猜大了"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"猜小了"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"猜对了"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-2-2-do-while循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-do-while循环语句"}},[t._v("#")]),t._v(" 4.2.2 do...while循环语句")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 满足循环条件，执行循环语句")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),t._v(" "),s("code",[t._v("do{ 循环语句 } while(循环条件);")])]),t._v(" "),s("p",[t._v("**注意：**与while的区别在于==do...while会先执行一次循环语句==，再判断循环条件")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint num = 0;\n\tdo\n\t{\n\t\tcout << num << endl;\n\t\tnum++;\n\n\t} while (num < 10);\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：与while循环区别在于，do...while先执行一次循环语句，再判断循环条件")])]),t._v(" "),s("p",[s("strong",[t._v("练习案例：水仙花数")])]),t._v(" "),s("p",[t._v("**案例描述：**水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身")]),t._v(" "),s("p",[t._v("例如：1^3 + 5^3+ 3^3 = 153")]),t._v(" "),s("p",[t._v("请利用do...while语句，求出所有3位数中的水仙花数")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-2-3-for循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-for循环语句"}},[t._v("#")]),t._v(" 4.2.3 for循环语句")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 满足循环条件，执行循环语句")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("for(起始表达式;条件表达式;末尾循环体) { 循环语句; }")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout << i << endl;\n\t}\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("详解：")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：for循环中的表达式，要用分号进行分隔")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结：while , do...while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用")])]),t._v(" "),s("p",[s("strong",[t._v("练习案例：敲桌子")])]),t._v(" "),s("p",[t._v("案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"敲桌子"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-2-4-嵌套循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4-嵌套循环"}},[t._v("#")]),t._v(" 4.2.4 嵌套循环")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 在循环体中再嵌套一层循环，解决一些实际问题")]),t._v(" "),s("p",[t._v("例如我们想在屏幕中打印如下图片，就需要利用嵌套循环")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//外层循环执行1次，内层循环执行1轮\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tfor (int j = 0; j < 10; j++)\n\t\t{\n\t\t\tcout << "*" << " ";\n\t\t}\n\t\tcout << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("p",[t._v("**练习案例：**乘法口诀表")]),t._v(" "),s("p",[t._v("案例描述：利用嵌套循环，实现九九乘法表")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-3-跳转语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-跳转语句"}},[t._v("#")]),t._v(" 4.3 跳转语句")]),t._v(" "),s("h4",{attrs:{id:"_4-3-1-break语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-break语句"}},[t._v("#")]),t._v(" 4.3.1 break语句")]),t._v(" "),s("p",[s("strong",[t._v("作用:")]),t._v(" 用于跳出==选择结构==或者==循环结构==")]),t._v(" "),s("p",[t._v("break使用的时机：")]),t._v(" "),s("ul",[s("li",[t._v("出现在switch条件语句中，作用是终止case并跳出switch")]),t._v(" "),s("li",[t._v("出现在循环语句中，作用是跳出当前的循环语句")]),t._v(" "),s("li",[t._v("出现在嵌套循环中，跳出最近的内层循环语句")])]),t._v(" "),s("p",[s("strong",[t._v("示例1：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\t//1、在switch 语句中使用break\n\tcout << "请选择您挑战副本的难度：" << endl;\n\tcout << "1、普通" << endl;\n\tcout << "2、中等" << endl;\n\tcout << "3、困难" << endl;\n\n\tint num = 0;\n\n\tcin >> num;\n\n\tswitch (num)\n\t{\n\tcase 1:\n\t\tcout << "您选择的是普通难度" << endl;\n\t\tbreak;\n\tcase 2:\n\t\tcout << "您选择的是中等难度" << endl;\n\t\tbreak;\n\tcase 3:\n\t\tcout << "您选择的是困难难度" << endl;\n\t\tbreak;\n\t}\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("示例2：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\t//2、在循环语句中用break\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tif (i == 5)\n\t\t{\n\t\t\tbreak; //跳出循环语句\n\t\t}\n\t\tcout << i << endl;\n\t}\n\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("示例3：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\t//在嵌套循环语句中使用break，退出内层循环\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tfor (int j = 0; j < 10; j++)\n\t\t{\n\t\t\tif (j == 5)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcout << "*" << " ";\n\t\t}\n\t\tcout << endl;\n\t}\n\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h4",{attrs:{id:"_4-3-2-continue语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-continue语句"}},[t._v("#")]),t._v(" 4.3.2 continue语句")]),t._v(" "),s("p",[t._v("**作用：**在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\tfor (int i = 0; i < 100; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tcout << i << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：continue并没有使整个循环终止，而break会跳出循环")])]),t._v(" "),s("h4",{attrs:{id:"_4-3-3-goto语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-goto语句"}},[t._v("#")]),t._v(" 4.3.3 goto语句")]),t._v(" "),s("p",[t._v("**作用：**可以无条件跳转语句")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),t._v(" "),s("code",[t._v("goto 标记;")])]),t._v(" "),s("p",[t._v("**解释：**如果标记的名称存在，执行到goto语句时，会跳转到标记的位置")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tcout << "1" << endl;\n\n\tgoto FLAG;\n\n\tcout << "2" << endl;\n\tcout << "3" << endl;\n\tcout << "4" << endl;\n\n\tFLAG:\n\tcout << "5" << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：在程序中不建议使用goto语句，以免造成程序流程混乱")])]),t._v(" "),s("h2",{attrs:{id:"_5-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-数组"}},[t._v("#")]),t._v(" 5 数组")]),t._v(" "),s("h3",{attrs:{id:"_5-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-概述"}},[t._v("#")]),t._v(" 5.1 概述")]),t._v(" "),s("p",[t._v("所谓数组，就是一个集合，里面存放了相同类型的数据元素")]),t._v(" "),s("p",[t._v("**特点1：**数组中的每个==数据元素都是相同的数据类型==")]),t._v(" "),s("p",[t._v("**特点2：**数组是由==连续的内存==位置组成的")]),t._v(" "),s("h3",{attrs:{id:"_5-2-一维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-一维数组"}},[t._v("#")]),t._v(" 5.2 一维数组")]),t._v(" "),s("h4",{attrs:{id:"_5-2-1-一维数组定义方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-一维数组定义方式"}},[t._v("#")]),t._v(" 5.2.1 一维数组定义方式")]),t._v(" "),s("p",[t._v("一维数组定义的三种方式：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("数据类型 数组名[ 数组长度 ];")])]),t._v(" "),s("li",[s("code",[t._v("数据类型 数组名[ 数组长度 ] = { 值1，值2 ...};")])]),t._v(" "),s("li",[s("code",[t._v("数据类型 数组名[ ] = { 值1，值2 ...};")])])]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//定义方式1\n\t//数据类型 数组名[元素个数];\n\tint score[10];\n\n\t//利用下标赋值\n\tscore[0] = 100;\n\tscore[1] = 99;\n\tscore[2] = 85;\n\n\t//利用下标输出\n\tcout << score[0] << endl;\n\tcout << score[1] << endl;\n\tcout << score[2] << endl;\n\n\n\t//第二种定义方式\n\t//数据类型 数组名[元素个数] =  {值1，值2 ，值3 ...};\n\t//如果{}内不足10个数据，剩余数据用0补全\n\tint score2[10] = { 100, 90,80,70,60,50,40,30,20,10 };\n\t\n\t//逐个输出\n\t//cout << score2[0] << endl;\n\t//cout << score2[1] << endl;\n\n\t//一个一个输出太麻烦，因此可以利用循环进行输出\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout << score2[i] << endl;\n\t}\n\n\t//定义方式3\n\t//数据类型 数组名[] =  {值1，值2 ，值3 ...};\n\tint score3[] = { 100,90,80,70,60,50,40,30,20,10 };\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout << score3[i] << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结2：数组中下标是从0开始索引")])]),t._v(" "),s("h4",{attrs:{id:"_5-2-2-一维数组数组名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-一维数组数组名"}},[t._v("#")]),t._v(" 5.2.2 一维数组数组名")]),t._v(" "),s("p",[t._v("一维数组名称的"),s("strong",[t._v("用途")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("可以统计整个数组在内存中的长度")]),t._v(" "),s("li",[t._v("可以获取数组在内存中的首地址")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//数组名用途\n\t//1、可以获取整个数组占用内存空间大小\n\tint arr[10] = { 1,2,3,4,5,6,7,8,9,10 };\n\n\tcout << "整个数组所占内存空间为： " << sizeof(arr) << endl;\n\tcout << "每个元素所占内存空间为： " << sizeof(arr[0]) << endl;\n\tcout << "数组的元素个数为： " << sizeof(arr) / sizeof(arr[0]) << endl;\n\n\t//2、可以通过数组名获取到数组首地址\n   cout << "数组首地址为： " << arr << endl;\n   cout << "数组中第一个元素地址为： " << &arr[0] << endl;\n   cout << "数组中第二个元素地址为： " << &arr[1] << endl;\n\n\t//arr = 100; 错误，数组名是常量，因此不可以赋值\n\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("注意：数组名是常量，不可以赋值")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结1：直接打印数组名，可以查看数组所占内存的首地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小")])]),t._v(" "),s("p",[s("strong",[t._v("练习案例1")]),t._v("：五只小猪称体重")]),t._v(" "),s("p",[s("strong",[t._v("案例描述：")])]),t._v(" "),s("p",[t._v("在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};")]),t._v(" "),s("p",[t._v("找出并打印最重的小猪体重。")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("350")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("**练习案例2：**数组元素逆置")]),t._v(" "),s("p",[t._v("**案例描述：**请声明一个5个元素的数组，并且将元素逆置.")]),t._v(" "),s("p",[t._v("(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("350")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_5-2-3-冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-冒泡排序"}},[t._v("#")]),t._v(" 5.2.3 冒泡排序")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 最常用的排序算法，对数组内元素进行排序")]),t._v(" "),s("ol",[s("li",[t._v("比较相邻的元素。如果第一个比第二个大，就交换他们两个。")]),t._v(" "),s("li",[t._v("对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。")]),t._v(" "),s("li",[t._v("重复以上的步骤，每次比较次数-1，直到不需要比较")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")]),t._v(" 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint arr[9] = { 4,2,8,0,5,7,1,3,9 };\n\n\tfor (int i = 0; i < 9 - 1; i++)\n\t{\n\t\tfor (int j = 0; j < 9 - 1 - i; j++)\n\t\t{\n\t\t\tif (arr[j] > arr[j + 1])\n\t\t\t{\n\t\t\t\tint temp = arr[j];\n\t\t\t\tarr[j] = arr[j + 1];\n\t\t\t\tarr[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (int i = 0; i < 9; i++)\n\t{\n\t\tcout << arr[i] << endl;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_5-3-二维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-二维数组"}},[t._v("#")]),t._v(" 5.3 二维数组")]),t._v(" "),s("p",[t._v("二维数组就是在一维数组上，多加一个维度。")]),t._v(" "),s("h4",{attrs:{id:"_5-3-1-二维数组定义方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-二维数组定义方式"}},[t._v("#")]),t._v(" 5.3.1 二维数组定义方式")]),t._v(" "),s("p",[t._v("二维数组定义的四种方式：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("数据类型 数组名[ 行数 ][ 列数 ];")])]),t._v(" "),s("li",[s("code",[t._v("数据类型 数组名[ 行数 ][ 列数 ] = { {数据1，数据2 } ，{数据3，数据4 } };")])]),t._v(" "),s("li",[s("code",[t._v("数据类型 数组名[ 行数 ][ 列数 ] = { 数据1，数据2，数据3，数据4};")])]),t._v(" "),s("li",[s("code",[t._v("数据类型 数组名[ ][ 列数 ] = { 数据1，数据2，数据3，数据4};")])])]),t._v(" "),s("blockquote",[s("p",[t._v("建议：以上4种定义方式，利用==第二种更加直观，提高代码的可读性==")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//方式1  \n\t//数组类型 数组名 [行数][列数]\n\tint arr[2][3];\n\tarr[0][0] = 1;\n\tarr[0][1] = 2;\n\tarr[0][2] = 3;\n\tarr[1][0] = 4;\n\tarr[1][1] = 5;\n\tarr[1][2] = 6;\n\n\tfor (int i = 0; i < 2; i++)\n\t{\n\t\tfor (int j = 0; j < 3; j++)\n\t\t{\n\t\t\tcout << arr[i][j] << " ";\n\t\t}\n\t\tcout << endl;\n\t}\n\n\t//方式2 \n\t//数据类型 数组名[行数][列数] = { {数据1，数据2 } ，{数据3，数据4 } };\n\tint arr2[2][3] =\n\t{\n\t\t{1,2,3},\n\t\t{4,5,6}\n\t};\n\n\t//方式3\n\t//数据类型 数组名[行数][列数] = { 数据1，数据2 ,数据3，数据4  };\n\tint arr3[2][3] = { 1,2,3,4,5,6 }; \n\n\t//方式4 \n\t//数据类型 数组名[][列数] = { 数据1，数据2 ,数据3，数据4  };\n\tint arr4[][3] = { 1,2,3,4,5,6 };\n\t\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：在定义二维数组时，如果初始化了数据，可以省略行数")])]),t._v(" "),s("h4",{attrs:{id:"_5-3-2-二维数组数组名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-二维数组数组名"}},[t._v("#")]),t._v(" 5.3.2 二维数组数组名")]),t._v(" "),s("ul",[s("li",[t._v("查看二维数组所占内存空间")]),t._v(" "),s("li",[t._v("获取二维数组首地址")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//二维数组数组名\n\tint arr[2][3] =\n\t{\n\t\t{1,2,3},\n\t\t{4,5,6}\n\t};\n\n\tcout << "二维数组大小： " << sizeof(arr) << endl;\n\tcout << "二维数组一行大小： " << sizeof(arr[0]) << endl;\n\tcout << "二维数组元素大小： " << sizeof(arr[0][0]) << endl;\n\n\tcout << "二维数组行数： " << sizeof(arr) / sizeof(arr[0]) << endl;\n\tcout << "二维数组列数： " << sizeof(arr[0]) / sizeof(arr[0][0]) << endl;\n\n\t//地址\n\tcout << "二维数组首地址：" << arr << endl;\n\tcout << "二维数组第一行地址：" << arr[0] << endl;\n\tcout << "二维数组第二行地址：" << arr[1] << endl;\n\n\tcout << "二维数组第一个元素地址：" << &arr[0][0] << endl;\n\tcout << "二维数组第二个元素地址：" << &arr[0][1] << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结1：二维数组名就是这个数组的首地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小")])]),t._v(" "),s("h4",{attrs:{id:"_5-3-3-二维数组应用案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3-二维数组应用案例"}},[t._v("#")]),t._v(" "),s("strong",[t._v("5.3.3 二维数组应用案例")])]),t._v(" "),s("p",[s("strong",[t._v("考试成绩统计：")])]),t._v(" "),s("p",[t._v("案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，"),s("strong",[t._v("请分别输出三名同学的总成绩")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("语文")]),t._v(" "),s("th",[t._v("数学")]),t._v(" "),s("th",[t._v("英语")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("张三")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("100")]),t._v(" "),s("td",[t._v("100")])]),t._v(" "),s("tr",[s("td",[t._v("李四")]),t._v(" "),s("td",[t._v("90")]),t._v(" "),s("td",[t._v("50")]),t._v(" "),s("td",[t._v("100")])]),t._v(" "),s("tr",[s("td",[t._v("王五")]),t._v(" "),s("td",[t._v("60")]),t._v(" "),s("td",[t._v("70")]),t._v(" "),s("td",[t._v("80")])])])]),t._v(" "),s("p",[s("strong",[t._v("参考答案：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint scores[3][3] =\n\t{\n\t\t{100,100,100},\n\t\t{90,50,100},\n\t\t{60,70,80},\n\t};\n\n\tstring names[3] = { "张三","李四","王五" };\n\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tint sum = 0;\n\t\tfor (int j = 0; j < 3; j++)\n\t\t{\n\t\t\tsum += scores[i][j];\n\t\t}\n\t\tcout << names[i] << "同学总成绩为： " << sum << endl;\n\t}\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("h2",{attrs:{id:"_6-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-函数"}},[t._v("#")]),t._v(" 6 函数")]),t._v(" "),s("h3",{attrs:{id:"_6-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-概述"}},[t._v("#")]),t._v(" 6.1 概述")]),t._v(" "),s("p",[t._v("**作用：**将一段经常使用的代码封装起来，减少重复代码，一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。")]),t._v(" "),s("h3",{attrs:{id:"_6-2-函数的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-函数的定义"}},[t._v("#")]),t._v(" 6.2 函数的定义")]),t._v(" "),s("p",[t._v("函数的定义一般主要有5个步骤：")]),t._v(" "),s("p",[t._v("1、返回值类型")]),t._v(" "),s("p",[t._v("2、函数名")]),t._v(" "),s("p",[t._v("3、参数表列")]),t._v(" "),s("p",[t._v("4、函数体语句")]),t._v(" "),s("p",[t._v("5、return 表达式")]),t._v(" "),s("p",[s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("返回值类型 函数名 （参数列表）\n{\n\n       函数体语句\n\n       return表达式\n\n}\n")])])]),s("ul",[s("li",[t._v("返回值类型 ：一个函数可以返回一个值。在函数定义中")]),t._v(" "),s("li",[t._v("函数名：给函数起个名称")]),t._v(" "),s("li",[t._v("参数列表：使用该函数时，传入的数据")]),t._v(" "),s("li",[t._v("函数体语句：花括号内的代码，函数内需要执行的语句")]),t._v(" "),s("li",[t._v("return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据")])]),t._v(" "),s("p",[t._v("**示例：**定义一个加法函数，实现两个数相加")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//函数定义\nint add(int num1, int num2)  //返回值 函数名 (参数)\n{\n\tint sum = num1 + num2;\n\treturn sum;\n}\n")])])]),s("h3",{attrs:{id:"_6-2-1-条件编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-条件编译"}},[t._v("#")]),t._v(" 6.2.1 条件编译")]),t._v(" "),s("p",[t._v("​\t一般情况下，在进行编译时对源程序中的每一行都要编译。但是有时希望程序中某一部分内容只在满足一定条件时才进行编译，也就是指定对程序中的一部分内容进行编译的条件。如果不满足这个条件，就不编译这部分内容。这就是“条件编译”。 其实这跟事物具有多样性一样。我们需要对不同的状况下采取不同的操作。例如程序的运行平台具有这种多样性，我们在window平台下编写的程序，可能使用某一个库或者与硬件相关的属性、方法。现在要将我们的程序移植到别的计算机系统的时候，例如linux系统。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("常见的欲编译指令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#define            定义一个预处理宏\n#undef            取消宏的定义\n#if                   编译预处理中的条件命令，相当于C语法中的if语句\n#ifdef              判断某个宏是否被定义，若已定义，执行随后的语句\n#ifndef            与#ifdef相反，判断某个宏是否未被定义\n#elif                若#if, #ifdef, #ifndef或前面的#elif条件不满足，则执行#elif之后的语句，相当于C语法中的else-if\n#else              与#if, #ifdef, #ifndef对应, 若这些条件不满足，则执行#else之后的语句，相当于C语法中的else\n#endif             #if, #ifdef, #ifndef这些条件命令的结束标志.\ndefined         　与#if, #elif配合使用，判断某个宏是否被定义\n")])])])]),t._v(" "),s("li",[s("p",[t._v("示例1")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("DEBUG "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])])]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"if 0"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("DEBUG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DEBUG 1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("DEBUG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])])]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DEBUG 2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ELSE"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ELSE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("示例2")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("OUTPUTLOG ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在调试程序时使之成为注释行")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("OUTPUTLOG ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本行为条件编译命令")])]),t._v("\n  cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", y="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", z="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在调试程序时需要输出这些信息")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本行为条件编译命令")])]),t._v("\n  cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x*y*z="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("宏测试，什么是宏：C++ "),s("a",{attrs:{href:"https://baike.baidu.com/item/%E5%AE%8F%E5%AE%9A%E4%B9%89/8711494",target:"_blank",rel:"noopener noreferrer"}},[t._v("宏定义"),s("OutboundLink")],1),t._v("将一个"),s("a",{attrs:{href:"https://baike.baidu.com/item/%E6%A0%87%E8%AF%86%E7%AC%A6/7105638",target:"_blank",rel:"noopener noreferrer"}},[t._v("标识符"),s("OutboundLink")],1),t._v("定义为一个字符串，"),s("a",{attrs:{href:"https://baike.baidu.com/item/%E6%BA%90%E7%A8%8B%E5%BA%8F/9752646",target:"_blank",rel:"noopener noreferrer"}},[t._v("源程序"),s("OutboundLink")],1),t._v("中的该标识符均以指定的字符串来代替。")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//22,12")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("练习2: 找出0-100的素数")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t** 1. 定义两个计数器\n\t** count_prime 统计当前数(i) 能被几个数整除(范围：2到i - 1)\n\t** count_five 统计是否输出了5个数，如果输出了5个数则换行\n\t*/")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count_prime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count_five "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t\t** 如果 i % j == 0，则计数器加一\n\t\t\t*/")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" count_prime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t** 上面为循环部分\n\t\t** ===================================================================\n\t\t** 下面为判断部分，注意，判断部分也是包含在第一个for循环中\n\t\t*/")]),t._v("\n\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t** 如果计数器count_prime == 0 则代表 从 2 到 i - 1范围中，i不能被任何数整除。此数为素数\n\t\t*/")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" count_prime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t\t** 每输出一个数字，计数器count_five加一\n\t\t\t*/")]),t._v("\n\t\t\tcount_five"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t\t** 计数器count_five == 5，则代表已经打印了5个数字\n\t\t\t** 打印换行\n\t\t\t** 计数器清零\n\t\t\t*/")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" count_five"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tcount_five "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t\t** 如果计数器count_prime == 0 则代表 从 2 到 i - 1范围中，i不能被多个数整除。此数不为素数\n\t\t\t** 计数器清零\n\t\t\t*/")]),t._v("\n\t\t\tcount_prime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_6-3-函数的调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-函数的调用"}},[t._v("#")]),t._v(" 6.3 函数的调用")]),t._v(" "),s("p",[t._v("**功能：**使用定义好的函数")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("函数名（参数）")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//函数定义\nint add(int num1, int num2) //定义中的num1,num2称为形式参数，简称形参\n{\n\tint sum = num1 + num2;\n\treturn sum;\n}\n\nint main() {\n\tint a = 10;\n\tint b = 10;\n\t//调用add函数\n\tint sum = add(a, b);//调用时的a，b称为实际参数，简称实参\n\tcout << "sum = " << sum << endl;\n\n\ta = 100;\n\tb = 100;\n\n\tsum = add(a, b);\n\tcout << "sum = " << sum << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参")])]),t._v(" "),s("h3",{attrs:{id:"_6-4-值传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-值传递"}},[t._v("#")]),t._v(" 6.4 值传递")]),t._v(" "),s("ul",[s("li",[t._v("所谓值传递，就是函数调用时实参将数值传入给形参")]),t._v(" "),s("li",[t._v("值传递时，==如果形参发生，并不会影响实参==")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('void swap(int num1, int num2)\n{\n\tcout << "交换前：" << endl;\n\tcout << "num1 = " << num1 << endl;\n\tcout << "num2 = " << num2 << endl;\n\n\tint temp = num1;\n\tnum1 = num2;\n\tnum2 = temp;\n\n\tcout << "交换后：" << endl;\n\tcout << "num1 = " << num1 << endl;\n\tcout << "num2 = " << num2 << endl;\n\n\t//return ; 当函数声明时候，不需要返回值，可以不写return\n}\n\nint main() {\n\n\tint a = 10;\n\tint b = 20;\n\n\tswap(a, b);\n\n\tcout << "mian中的 a = " << a << endl;\n\tcout << "mian中的 b = " << b << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结： 值传递时，形参是修饰不了实参的")])]),t._v(" "),s("h3",{attrs:{id:"_6-5-函数的常见样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-函数的常见样式"}},[t._v("#")]),t._v(" "),s("strong",[t._v("6.5 函数的常见样式")])]),t._v(" "),s("p",[t._v("常见的函数样式有4种")]),t._v(" "),s("ol",[s("li",[t._v("无参无返")]),t._v(" "),s("li",[t._v("有参无返")]),t._v(" "),s("li",[t._v("无参有返")]),t._v(" "),s("li",[t._v("有参有返")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//函数常见样式\n//1、 无参无返\nvoid test01()\n{\n\t//void a = 10; //无类型不可以创建变量,原因无法分配内存\n\tcout << "this is test01" << endl;\n\t//test01(); 函数调用\n}\n\n//2、 有参无返\nvoid test02(int a)\n{\n\tcout << "this is test02" << endl;\n\tcout << "a = " << a << endl;\n}\n\n//3、无参有返\nint test03()\n{\n\tcout << "this is test03 " << endl;\n\treturn 10;\n}\n\n//4、有参有返\nint test04(int a, int b)\n{\n\tcout << "this is test04 " << endl;\n\tint sum = a + b;\n\treturn sum;\n}\n')])])]),s("h3",{attrs:{id:"_6-6-函数的声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-函数的声明"}},[t._v("#")]),t._v(" 6.6 函数的声明")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。声明是为了调用顺序的随意，已经声明了")]),t._v(" "),s("ul",[s("li",[t._v("函数的"),s("strong",[t._v("声明可以多次")]),t._v("，但是函数的"),s("strong",[t._v("定义只能有一次")])])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//声明可以多次，定义只能一次\n//声明\nint max(int a, int b);\nint max(int a, int b);\n//定义\nint max(int a, int b)\n{\n\treturn a > b ? a : b;\n}\n\nint main() {\n\n\tint a = 100;\n\tint b = 200;\n\n\tcout << max(a, b) << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_6-7-函数的分文件编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-函数的分文件编写"}},[t._v("#")]),t._v(" 6.7 函数的分文件编写")]),t._v(" "),s("p",[t._v("**作用：**让代码结构更加清晰")]),t._v(" "),s("p",[t._v("函数分文件编写一般有4个步骤")]),t._v(" "),s("ol",[s("li",[t._v("创建后缀名为.h的头文件")]),t._v(" "),s("li",[t._v("创建后缀名为.cpp的源文件")]),t._v(" "),s("li",[t._v("在头文件中写函数的声明")]),t._v(" "),s("li",[t._v("在源文件中写函数的定义")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//swap.h文件\n#include<iostream>\nusing namespace std;\n\n//实现两个数字交换的函数声明\nvoid swap(int a, int b);\n\n")])])]),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//swap.cpp文件\n#include "swap.h"\n\nvoid swap(int a, int b)\n{\n\tint temp = a;\n\ta = b;\n\tb = temp;\n\n\tcout << "a = " << a << endl;\n\tcout << "b = " << b << endl;\n}\n')])])]),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//main函数文件\n#include "swap.h"\nint main() {\n\n\tint a = 100;\n\tint b = 200;\n\tswap(a, b);\n\tsystem("pause");\n\treturn 0;\n}\n\n')])])]),s("h2",{attrs:{id:"_7-指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-指针"}},[t._v("#")]),t._v(" 7 指针")]),t._v(" "),s("h3",{attrs:{id:"_7-1-指针的基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-指针的基本概念"}},[t._v("#")]),t._v(" 7.1 指针的基本概念")]),t._v(" "),s("p",[s("strong",[t._v("指针的作用：")]),t._v(" 可以通过指针间接访问内存")]),t._v(" "),s("ul",[s("li",[t._v("内存编号是从0开始记录的，一般用十六进制数字表示")]),t._v(" "),s("li",[t._v("可以利用指针变量保存地址, 变量保存的是内存地址")])]),t._v(" "),s("h3",{attrs:{id:"_7-2-指针变量的定义和使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-指针变量的定义和使用"}},[t._v("#")]),t._v(" 7.2 指针变量的定义和使用")]),t._v(" "),s("p",[t._v("指针变量定义语法： "),s("code",[t._v("数据类型 * 变量名；")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#include<iostream>\nusing namespace std;\nint main() {\n    int a = 100;\n    int *p;\n    p = &a;  // 指针记录\n    cout<<"a的地址为："<<&a<<endl;  // a的地址为：0x7ffeed78a9a8\n    cout<<"p为："<<p<<endl;  // p为：0x7ffeed78a9a8\n\n    // 解引用的方式找到指针指向的内存的数据,*p就是去该变量的内存地址的数据\n    *p = 1000;\n    cout<<"a修改后: "<< a;\n\n    return 0;\n}\n')])])]),s("p",[t._v("指针变量和普通变量的区别")]),t._v(" "),s("ul",[s("li",[t._v("普通变量存放的是数据,指针变量存放的是地址")]),t._v(" "),s("li",[t._v('指针变量可以通过" * "操作符，操作指针变量指向的内存空间，这个过程称为解引用')])]),t._v(" "),s("blockquote",[s("p",[t._v("总结1： 我们可以通过 & 符号 获取变量的地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结2：利用指针可以记录地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结3：对指针变量解引用，可以操作指针指向的内存")])]),t._v(" "),s("h3",{attrs:{id:"_7-3-指针所占内存空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-指针所占内存空间"}},[t._v("#")]),t._v(" 7.3 指针所占内存空间")]),t._v(" "),s("p",[t._v("提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n    int a = 10;\n\n    int * p;\n    p = &a; //指针指向数据a的地址\n\n    cout << *p << endl; //* 解引用 10\n    cout << sizeof(p) << endl;  // 8\n    cout << sizeof(char *) << endl; // 8\n    cout << sizeof(float *) << endl; // 8\n    cout << sizeof(double *) << endl; // 8\n\n    system("pause");\n\n    return 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：所有指针类型在32位操作系统下是4个字节,64位是8个字节")])]),t._v(" "),s("h3",{attrs:{id:"_7-4-空指针和野指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-空指针和野指针"}},[t._v("#")]),t._v(" 7.4 空指针和野指针")]),t._v(" "),s("p",[s("strong",[t._v("空指针")]),t._v("：指针变量指向内存中编号为0的空间")]),t._v(" "),s("p",[t._v("**用途：**初始化指针变量，意思是如果你的指针不知道指向那，就指导空指针，常用于给指针变量初始化")]),t._v(" "),s("p",[t._v("**注意：**空指针指向的内存是不可以访问的")]),t._v(" "),s("p",[s("strong",[t._v("示例1：空指针")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\t//指针变量p指向内存地址编号为0的空间\n\tint * p = NULL;\n\n\t//访问空指针报错 \n\t//内存编号0 ~255为系统占用内存，不允许用户访问\n\tcout << *p << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("p",[s("strong",[t._v("野指针")]),t._v("：指针变量指向非法的内存空间")]),t._v(" "),s("p",[s("strong",[t._v("示例2：野指针")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("int main() {\n\n    //指针变量p指向内存地址编号为0x1100的空间\n    int * p = (int *)0x1100;  // 将一个内存地址强转成指针变量的地址，但是不是我们申请的，这是不能访问的\n\n    //访问野指针报错 \n    cout << *p << endl;\n\n    return 0;\n}\n")])])]),s("blockquote",[s("p",[t._v("总结：空指针和野指针都不是我们申请的空间，因此不要访问。野指针，也就是指向不可用内存区域的指针。"),s("em",[t._v("*如果对野指针进行操作，将会使程序发生不可预知的错误，甚至可能直接引起崩溃。*")])])]),t._v(" "),s("h3",{attrs:{id:"_7-5-const修饰指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-const修饰指针"}},[t._v("#")]),t._v(" 7.5 const修饰指针")]),t._v(" "),s("p",[t._v("const修饰指针有三种情况")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("const修饰指针   --- 常量指针：const  数据类型 * 变量 = 内存地址")])]),t._v(" "),s("li",[s("p",[t._v("const修饰常量   --- 指针常量： 数据类型  const  *  变量 = 内存地址")])]),t._v(" "),s("li",[s("p",[t._v("const即修饰指针，又修饰常量")]),t._v(" "),s("p",[t._v("（如果const 后面跟的是数据类型 *，则是常量指针；如果const后面跟着变量，则是指针常量），显然 数据类型 + “*” 就是指针")])])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint a = 10;\n\tint b = 10;\n\n\t//const修饰的是指针，指针指向可以改，指针指向的值不可以更改\n\tconst int * p1 = &a;    // 记忆： const 修饰的是 *p，所以值不能改\n\tp1 = &b; //正确，指向的内存地址改了\n\t//*p1 = 100;  报错，值不能改\n\t\n\n\t//const修饰的是常量，指针指向不可以改，指针指向的值可以更改\n\tint * const p2 = &a;  // 记忆：const修饰的是p2，则指针不可以改\n\t//p2 = &b; //错误\n\t*p2 = 100; //正确， 指向的值可以改，指向内存地址不可以改\n\n    //const既修饰指针又修饰常量\n\tconst int * const p3 = &a;\n\t//p3 = &b; //错误\n\t//*p3 = 100; //错误 指针的指向和指向的值都不可以改\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量")])]),t._v(" "),s("h3",{attrs:{id:"_7-6-指针和数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-指针和数组"}},[t._v("#")]),t._v(" 7.6 指针和数组")]),t._v(" "),s("p",[t._v("**作用：**利用指针访问数组中元素")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('int main() {\n\n\tint arr[] = { 1,2,3,4,5,6,7,8,9,10 };\n\n\tint * p = arr;  //指向数组的指针\n\n\tcout << "第一个元素： " << arr[0] << endl;\n\tcout << "指针访问第一个元素： " << *p << endl;\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\t//利用指针遍历数组,让指针偏移4个字节\n\t\tcout << *p << endl; // cout<<arr[i]<<endl;\n\t\tp++;\n\t}\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_7-7-指针和函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-指针和函数"}},[t._v("#")]),t._v(" 7.7 指针和函数")]),t._v(" "),s("p",[t._v("**作用：**利用指针作函数参数，可以修改实参的值")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//值传递\nvoid swap1(int a ,int b)\n{\n\tint temp = a;\n\ta = b; \n\tb = temp;\n}\n//地址传递\nvoid swap2(int * p1, int *p2)\n{\n\tint temp = *p1;\n\t*p1 = *p2;\n\t*p2 = temp;\n}\n\nint main() {\n\tint a = 10;\n\tint b = 20;\n\tswap1(a, b); // 值传递不会改变实参\n\tswap2(&a, &b); //地址传递会改变实参\n\tcout << "a = " << a << endl;\n\tcout << "b = " << b << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递")])]),t._v(" "),s("h3",{attrs:{id:"_7-8-指针、数组、函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-8-指针、数组、函数"}},[t._v("#")]),t._v(" 7.8 指针、数组、函数")]),t._v(" "),s("p",[t._v("**案例描述：**封装一个函数，利用冒泡排序，实现对整型数组的升序排序")]),t._v(" "),s("p",[t._v("例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//冒泡排序函数\nvoid bubbleSort(int * arr, int len)  //int * arr 也可以写为int arr[]\n{\n\tfor (int i = 0; i < len - 1; i++)\n\t{\n\t\tfor (int j = 0; j < len - 1 - i; j++)\n\t\t{\n\t\t\tif (arr[j] > arr[j + 1])\n\t\t\t{\n\t\t\t\tint temp = arr[j];\n\t\t\t\tarr[j] = arr[j + 1];\n\t\t\t\tarr[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//打印数组函数\nvoid printArray(int arr[], int len)\n{\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tcout << arr[i] << endl;\n\t}\n}\n\nint main() {\n\n\tint arr[10] = { 4,3,6,9,1,2,10,8,7,5 };\n\tint len = sizeof(arr) / sizeof(int);\n\n\tbubbleSort(arr, len);\n\n\tprintArray(arr, len);\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针")])]),t._v(" "),s("h2",{attrs:{id:"_8-结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-结构体"}},[t._v("#")]),t._v(" 8 结构体")]),t._v(" "),s("h3",{attrs:{id:"_8-1-结构体基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-结构体基本概念"}},[t._v("#")]),t._v(" 8.1 结构体基本概念")]),t._v(" "),s("p",[t._v("结构体属于用户==自定义的数据类型==，允许用户存储不同的数据类型")]),t._v(" "),s("h3",{attrs:{id:"_8-2-结构体定义和使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-结构体定义和使用"}},[t._v("#")]),t._v(" 8.2 结构体定义和使用")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("struct 结构体名 { 结构体成员列表 }；")])]),t._v(" "),s("p",[t._v("通过结构体创建变量的方式有三种：")]),t._v(" "),s("ul",[s("li",[t._v("struct 结构体名 变量名")]),t._v(" "),s("li",[t._v("struct 结构体名 变量名 = { 成员1值 ， 成员2值...}")]),t._v(" "),s("li",[t._v("定义结构体时顺便创建变量")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n}stu3; //结构体变量创建方式3 \n\n\nint main() {\n\n\t//结构体变量创建方式1\n\tstruct student stu1; //struct 关键字可以省略\n\n\tstu1.name = "张三";\n\tstu1.age = 18;\n\tstu1.score = 100;\n\t\n\tcout << "姓名：" << stu1.name << " 年龄：" << stu1.age  << " 分数：" << stu1.score << endl;\n\n\t//结构体变量创建方式2\n\tstruct student stu2 = { "李四",19,60 };\n\n\tcout << "姓名：" << stu2.name << " 年龄：" << stu2.age  << " 分数：" << stu2.score << endl;\n\n\n\tstu3.name = "王五";\n\tstu3.age = 18;\n\tstu3.score = 80;\n\t\n\n\tcout << "姓名：" << stu3.name << " 年龄：" << stu3.age  << " 分数：" << stu3.score << endl;\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结1：定义结构体时的关键字是struct，不可省略")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结2：创建结构体变量时，关键字struct可以省略")])]),t._v(" "),s("blockquote",[s("p",[t._v("总结3：结构体变量利用操作符 ''.''  访问成员")])]),t._v(" "),s("h3",{attrs:{id:"_8-3-结构体数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-结构体数组"}},[t._v("#")]),t._v(" 8.3 结构体数组")]),t._v(" "),s("p",[t._v("**作用：**将自定义的结构体放入到数组中方便维护")]),t._v(" "),s("p",[s("strong",[t._v("语法：")]),s("code",[t._v("struct 结构体名 数组名[元素个数] = { {} , {} , ... {} }")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n}\n\nint main() {\n\t\n\t//结构体数组\n\tstruct student arr[3]=\n\t{\n\t\t{"张三",18,80 },\n\t\t{"李四",19,60 },\n\t\t{"王五",20,70 }\n\t};\n\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tcout << "姓名：" << arr[i].name << " 年龄：" << arr[i].age << " 分数：" << arr[i].score << endl;\n\t}\n\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_8-4-结构体指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-结构体指针"}},[t._v("#")]),t._v(" 8.4 结构体指针")]),t._v(" "),s("p",[t._v("**作用：**通过指针访问结构体中的成员")]),t._v(" "),s("ul",[s("li",[t._v("利用操作符 "),s("code",[t._v("->")]),t._v("可以通过结构体指针访问结构体属性")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n};\n\n\nint main() {\n\t\n\tstruct student stu = { "张三",18,100, };\n\t\n\tstruct student * p = &stu;  // 结构体指针\n\t\n\tp->score = 80; //指针通过 -> 操作符可以访问成员； 如果是结构体变量直接使用.就可以了\n\n\tcout << "姓名：" << p->name << " 年龄：" << p->age << " 分数：" << p->score << endl;\n\t\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：结构体指针可以通过 -> 操作符 来访问结构体中的成员")])]),t._v(" "),s("h3",{attrs:{id:"_8-5-结构体嵌套结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-结构体嵌套结构体"}},[t._v("#")]),t._v(" 8.5 结构体嵌套结构体")]),t._v(" "),s("p",[s("strong",[t._v("作用：")]),t._v(" 结构体中的成员可以是另一个结构体")]),t._v(" "),s("p",[t._v("**例如：**每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//学生结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n};\n\n//教师结构体定义\nstruct teacher\n{\n    //成员列表\n\tint id; //职工编号\n\tstring name;  //教师姓名\n\tint age;   //教师年龄\n\tstruct student stu; //子结构体 学生\n};\n\n\nint main() {\n\n\tstruct teacher t1;\n\tt1.id = 10000;\n\tt1.name = "老王";\n\tt1.age = 40;\n\n\tt1.stu.name = "张三";\n\tt1.stu.age = 18;\n\tt1.stu.score = 100;\n\n\tcout << "教师 职工编号： " << t1.id << " 姓名： " << t1.name << " 年龄： " << t1.age << endl;\n\t\n\tcout << "辅导学员 姓名： " << t1.stu.name << " 年龄：" << t1.stu.age << " 考试分数： " << t1.stu.score << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("p",[t._v("**总结：**在结构体中可以定义另一个结构体作为成员，用来解决实际问题")]),t._v(" "),s("h3",{attrs:{id:"_8-6-结构体做函数参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-结构体做函数参数"}},[t._v("#")]),t._v(" 8.6 结构体做函数参数")]),t._v(" "),s("p",[t._v("**作用：**将结构体作为参数向函数中传递")]),t._v(" "),s("p",[t._v("传递方式有两种：")]),t._v(" "),s("ul",[s("li",[t._v("值传递")]),t._v(" "),s("li",[t._v("地址传递")])]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//学生结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n};\n\n//值传递\nvoid printStudent(student stu )\n{\n\tstu.age = 28;\n\tcout << "子函数中 姓名：" << stu.name << " 年龄： " << stu.age  << " 分数：" << stu.score << endl;\n}\n\n//地址传递\nvoid printStudent2(student *stu)\n{\n\tstu->age = 28;\n\tcout << "子函数中 姓名：" << stu->name << " 年龄： " << stu->age  << " 分数：" << stu->score << endl;\n}\n\nint main() {\n\tstudent stu = { "张三",18,100};\n\t//值传递\n\tprintStudent(stu);\n\tcout << "主函数中 姓名：" << stu.name << " 年龄： " << stu.age << " 分数：" << stu.score << endl;\n\n\tcout << endl;\n\n\t//地址传递\n\tprintStudent2(&stu);\n\tcout << "主函数中 姓名：" << stu.name << " 年龄： " << stu.age  << " 分数：" << stu.score << endl;\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("blockquote",[s("p",[t._v("总结：如果不想修改主函数中的数据，用值传递，反之用地址传递")])]),t._v(" "),s("h3",{attrs:{id:"_8-7-结构体中-const使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-结构体中-const使用场景"}},[t._v("#")]),t._v(" 8.7 结构体中 const使用场景")]),t._v(" "),s("p",[t._v("**作用：**用const来防止误操作")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//学生结构体定义\nstruct student\n{\n\t//成员列表\n\tstring name;  //姓名\n\tint age;      //年龄\n\tint score;    //分数\n};\n\n//const使用场景\nvoid printStudent(const student *stu) //加const防止函数体中的误操作\n{\n\t//stu->age = 100; //操作失败，因为加了const修饰\n\tcout << "姓名：" << stu->name << " 年龄：" << stu->age << " 分数：" << stu->score << endl;\n\n}\n\nint main() {\n\tstudent stu = { "张三",18,100 };\n\tprintStudent(&stu);\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h3",{attrs:{id:"_8-8-结构体案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-结构体案例"}},[t._v("#")]),t._v(" 8.8 结构体案例")]),t._v(" "),s("h4",{attrs:{id:"_8-8-1-案例1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-1-案例1"}},[t._v("#")]),t._v(" 8.8.1 案例1")]),t._v(" "),s("p",[s("strong",[t._v("案例描述：")])]),t._v(" "),s("p",[t._v("学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下")]),t._v(" "),s("p",[t._v("设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员")]),t._v(" "),s("p",[t._v("学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值")]),t._v(" "),s("p",[t._v("最终打印出老师数据以及老师所带的学生数据。")]),t._v(" "),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('struct Student\n{\n\tstring name;\n\tint score;\n};\nstruct Teacher\n{\n\tstring name;\n\tStudent sArray[5];  // 结构体数组\n};\n\nvoid allocateSpace(Teacher tArray[] , int len)\n{\n\tstring tName = "教师";\n\tstring sName = "学生";\n\tstring nameSeed = "ABCDE";\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\ttArray[i].name = tName + nameSeed[i];\n\t\t\n\t\tfor (int j = 0; j < 5; j++)\n\t\t{\n\t\t\ttArray[i].sArray[j].name = sName + nameSeed[j];\n\t\t\ttArray[i].sArray[j].score = rand() % 61 + 40;\n\t\t}\n\t}\n}\n\nvoid printTeachers(Teacher tArray[], int len)\n{\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tcout << tArray[i].name << endl;\n\t\tfor (int j = 0; j < 5; j++)\n\t\t{\n\t\t\tcout << "\\t姓名：" << tArray[i].sArray[j].name << " 分数：" << tArray[i].sArray[j].score << endl;\n\t\t}\n\t}\n}\n\nint main() {\n\tsrand((unsigned int)time(NULL)); //随机数种子 头文件 #include <ctime>\n\tTeacher tArray[3]; //老师数组\n\tint len = sizeof(tArray) / sizeof(Teacher);\n\tallocateSpace(tArray, len); //创建数据\n\tprintTeachers(tArray, len); //打印数据\n\tsystem("pause");\n\treturn 0;\n}\n')])])]),s("h4",{attrs:{id:"_8-8-2-案例2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-2-案例2"}},[t._v("#")]),t._v(" 8.8.2 案例2")]),t._v(" "),s("p",[s("strong",[t._v("案例描述：")])]),t._v(" "),s("p",[t._v("设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。")]),t._v(" "),s("p",[t._v("通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。")]),t._v(" "),s("p",[t._v("五名英雄信息如下：")]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\t\t{"刘备",23,"男"},\n\t\t{"关羽",22,"男"},\n\t\t{"张飞",20,"男"},\n\t\t{"赵云",21,"男"},\n\t\t{"貂蝉",19,"女"},\n')])])]),s("p",[s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//英雄结构体\nstruct hero\n{\n\tstring name;\n\tint age;\n\tstring sex;\n};\n//冒泡排序\nvoid bubbleSort(hero arr[] , int len)\n{\n\tfor (int i = 0; i < len - 1; i++)\n\t{\n\t\tfor (int j = 0; j < len - 1 - i; j++)\n\t\t{\n\t\t\tif (arr[j].age > arr[j + 1].age)\n\t\t\t{\n\t\t\t\thero temp = arr[j];\n\t\t\t\tarr[j] = arr[j + 1];\n\t\t\t\tarr[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n//打印数组\nvoid printHeros(hero arr[], int len)\n{\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tcout << "姓名： " << arr[i].name << " 性别： " << arr[i].sex << " 年龄： " << arr[i].age << endl;\n\t}\n}\n\nint main() {\n\n\tstruct hero arr[5] =\n\t{\n\t\t{"刘备",23,"男"},\n\t\t{"关羽",22,"男"},\n\t\t{"张飞",20,"男"},\n\t\t{"赵云",21,"男"},\n\t\t{"貂蝉",19,"女"},\n\t};\n\n\tint len = sizeof(arr) / sizeof(hero); //获取数组元素个数\n\n\tbubbleSort(arr, len); //排序\n\n\tprintHeros(arr, len); //打印\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])])])])}),[],!1,null,null,null);n.default=e.exports}}]);